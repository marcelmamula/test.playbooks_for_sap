---
# Sync Main to Main-Auto-Updated and distribute shared files
name: Sync Main to Main-Auto-Updated

on:
  # Runs on push to main branch
  push:
    branches:
      - main

jobs:
  sync:
    name: 'Sync Main to Main-Auto-Updated'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create or update publish branch
        run: |
          git fetch origin main
          git fetch origin main-auto-updated

          if git ls-remote --heads origin main-auto-updated; then
            git checkout main-auto-updated
            git reset --hard origin/main
          else
            git checkout --orphan main-auto-updated # Create an orphan branch
            git rm -rf. # Remove all files
            git checkout main. # Copy files from main
          fi

      - name: Copy shared files to scenarios
        run: |
          for dir in deploy_scenarios/*; do
            # Copy tasks and update paths
            mkdir -p $dir/tasks
            cp tasks/*.yml $dir/tasks/
            sed -i 's/file: ..\/..\/tasks\//file: tasks\//' $dir/*.yml

            # Copy ansible_requirements
            cp vars/ansible_requirements.yml $dir/
          done

      - name: Append shared vars to scenario vars
        run: |
          for dir in deploy_scenarios/*; do
            sed 's/^---/\n/g' vars/platform_vars.yml >> $dir/ansible_extravars.yml
            sed 's/^---/\n/g' vars/platform_noninteractive_vars.yml >> $dir/optional/ansible_extravars_noninteractive.yml
          done

      - name: Check for changes
        id: check_changes
        run: |
          git add .
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi

      - name: Commit changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Prepare collection for release"

      - name: Push to publish branch
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git push origin main-auto-updated --force-with-lease
