---
# Sync Main to Main-Auto-Updated and distribute shared files
name: Sync Main to Main-Auto-Updated

on:
  # Runs on push to main branch
  push:
    branches:
      - main

jobs:
  sync:
    name: 'Sync Main to Main-Auto-Updated'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo_playbooks

      - name: Create or update publish branch
        working-directory: repo_playbooks
        run: |
          git fetch origin main
          # Check if the branch exists remotely *before* attempting to fetch it.
          if [[ $(git ls-remote --heads origin main-auto-updated) ]]; then
            git fetch origin main-auto-updated
            git checkout main-auto-updated
            git reset --hard origin/main
          else
            git checkout --orphan main-auto-updated
            git rm -rf .
            git checkout main . # Use main . to copy all files
          fi

      - name: Copy shared files to scenarios
        working-directory: repo_playbooks
        run: |
          for dir in ./deploy_scenarios/*; do
            # Copy tasks and update paths
            cp ./common_fragments/tasks/*.yml $dir/optional/
            sed -i 's/..\/..\/common_fragments\/tasks\//optional\//' $dir/ansible_playbook.yml

            # Copy ansible_requirements
            cp ./common_fragments/vars/ansible_requirements.yml $dir/
          done

      - name: Append shared vars to scenario vars
        working-directory: repo_playbooks
        run: |
          # Loop through all scenarios
          for dir in ./deploy_scenarios/*; do
            ls -la $dir/

            # Loop through all valid extravars files
            for file in "$dir"/ansible_extravars_*_base.yml; do
              # Extract platform name using basename of file
              basefile=$(basename "$file")
              platform=$(echo "$basefile" | sed 's/ansible_extravars_\(.*\)_base\.yml/\1/')
              source_fragment="common_fragments/vars/platform_${platform}.yml"

              # Execute only when source platform vars fragment exists
              if [ -f "$source_fragment" ]; then
                sed 's/^---/\n/g' "$source_fragment" >> "$file"
              fi

            # Remove _base from extravars file name
            new_file="${file%_base.yml}.yml"
            mv "$file" "$new_file"

            done
          done

          # Remove fragments after copying them
          git rm -rf ./common_fragments

      - name: Check for changes
        working-directory: repo_playbooks
        id: check_changes
        run: |
          git add .
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi

      - name: Commit changes
        working-directory: repo_playbooks
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Prepare collection for release"

      - name: Push to publish branch
        working-directory: repo_playbooks
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git push origin main-auto-updated --force-with-lease
