---
# Interactive inputs for platform selection
- name: Block for sap_vm_provision_iac_type
  block:
    - name: Interactive input - sap_vm_provision_iac_type
      ansible.builtin.pause:
        prompt: |
          Please choose Infrastructure-as-Code automation from list: ansible , ansible_to_terraform
          (for existing_hosts, use Ansible standard execution with an Ansible Extravars file)
          Default: ansible
          Press enter to skip.
      register: sap_vm_provision_iac_type_register
      when: sap_vm_provision_iac_type is not defined or not sap_vm_provision_iac_type

    - name: Set fact for sap_vm_provision_iac_type
      ansible.builtin.set_fact:
        sap_vm_provision_iac_type: "{{ 'ansible' if not sap_vm_provision_iac_type_register.user_input
          else sap_vm_provision_iac_type_register.user_input }}"
      when: sap_vm_provision_iac_type is not defined or not sap_vm_provision_iac_type

    - name: Interactive input - sap_vm_provision_iac_type - Invalid input
      ansible.builtin.fail:
        msg: |
          Value '{{ sap_vm_provision_iac_type }}' is invalid.
          Available options: ansible , ansible_to_terraform
      when:
        - sap_vm_provision_iac_type_register.user_input is defined
        - sap_vm_provision_iac_type not in ['ansible', 'ansible_to_terraform', 'existing_hosts']

- name: Block for sap_vm_provision_iac_platform
  block:
    - name: Interactive input - sap_vm_provision_iac_platform
      ansible.builtin.pause:
        prompt: |
          Please choose Infrastructure Platform from list:
          aws_ec2_vs , gcp_ce_vm , ibmcloud_powervs , ibmcloud_vs , ibmpowervm_vm , kubevirt_vm , msazure_vm , ovirt_vm
      register: sap_vm_provision_iac_platform_register
      when: sap_vm_provision_iac_platform is not defined or not sap_vm_provision_iac_platform

    - name: Set fact for sap_vm_provision_iac_platform
      ansible.builtin.set_fact:
        sap_vm_provision_iac_platform: "{{ sap_vm_provision_iac_platform_register.user_input }}"
      when: sap_vm_provision_iac_platform is not defined or not sap_vm_provision_iac_platform

    - name: Interactive input - sap_vm_provision_iac_platform - Invalid input
      ansible.builtin.fail:
        msg: |
          Value '{{ sap_vm_provision_iac_platform }}' is invalid.
          Available options:
          aws_ec2_vs , gcp_ce_vm , ibmcloud_powervs , ibmcloud_vs , ibmpowervm_vm , kubevirt_vm , msazure_vm , ovirt_vm
      when:
        - sap_vm_provision_iac_platform_register.user_input is defined
        - sap_vm_provision_iac_platform not in ['aws_ec2_vs', 'gcp_ce_vm', 'ibmcloud_powervs', 'ibmcloud_vs',
            'ibmpowervm_vm', 'kubevirt_vm', 'msazure_vm', 'ovirt_vm', 'existing_hosts']


# Interactive input for SAP software selection from dictionary
- name: Block for sap_software_product
  when:
    - sap_software_install_dictionary is defined and sap_software_install_dictionary
  block:
    - name: Interactive input - sap_software_product
      ansible.builtin.pause:
        prompt: |
          Please select SAP Product from list: {{ sap_software_install_dictionary.keys() }}
          Products are defined in variable sap_software_install_dictionary.
          Default: {{ __default_product }}
          Press enter to skip.
      register: sap_software_product_register
      vars:
        __default_product: "{{ (sap_software_install_dictionary | dict2items | first).key }}"
      when:
        - sap_software_product is not defined or not sap_software_product
          or sap_software_product not in sap_software_install_dictionary.keys()

    - name: Set fact for sap_software_product
      ansible.builtin.set_fact:
        sap_software_product:
          "{{ (sap_software_install_dictionary | dict2items | first).key
          if not sap_software_product_register.user_input
          else sap_software_product_register.user_input }}"
      when:
        - sap_software_product is not defined or not sap_software_product
          or sap_software_product not in sap_software_install_dictionary.keys()

    - name: Interactive input - sap_software_product - Invalid input
      ansible.builtin.fail:
        msg: |
          Value '{{ sap_software_product }}' is invalid.
          Available options: {{ sap_software_install_dictionary.keys() }}
      when:
        - sap_software_product_register.user_input is defined
        - sap_software_product not in sap_software_install_dictionary.keys()


# sap_playbook_interactive_input_type defines which type of inputs are gathered
- name: Execute interactive type - HANA
  ansible.builtin.include_tasks:
    file: "../../common_fragments/tasks/task_interactive_hana.yml"
  when: sap_playbook_interactive_input_type is defined and sap_playbook_interactive_input_type in __hana_types
  vars:
    __hana_types:
      - hana
      - hana_ha
      - s4hana
      - s4hana_ha

- name: Execute interactive type - SWPM
  ansible.builtin.include_tasks:
    file: "../../common_fragments/tasks/task_interactive_swpm.yml"
  when: sap_playbook_interactive_input_type is defined and sap_playbook_interactive_input_type in __swpm_types
  vars:
    __swpm_types:
      - s4hana
      - s4hana_ha


# Interactive inputs for specific platform
- name: Check that provided {{ sap_vm_provision_iac_platform }} has task file
  ansible.builtin.stat:
    path: "../../common_fragments/tasks/task_interactive_{{ sap_vm_provision_iac_platform }}.yml"
  register: __iac_platform_task_file
  ignore_errors: true

- name: Interactive input - Trigger prompts for VM provisioning via {{ sap_vm_provision_iac_platform }}
  ansible.builtin.include_tasks:
    file: "../../common_fragments/tasks/task_interactive_{{ sap_vm_provision_iac_platform }}.yml"
  when: __iac_platform_task_file.stat.exists


# Interactive inputs for all scenarios
- name: Block for sap_vm_provision_dns_root_domain
  when: sap_vm_provision_dns_root_domain is not defined or not sap_vm_provision_dns_root_domain
  block:
    - name: Interactive input - sap_vm_provision_dns_root_domain
      ansible.builtin.pause:
        prompt: |
          Please enter DNS domain for fully qualified domain name (FQDN).
          Example: example.com
      register: sap_vm_provision_dns_root_domain_register
      no_log: true

    - name: Set fact for sap_vm_provision_dns_root_domain
      ansible.builtin.set_fact:
        sap_vm_provision_dns_root_domain: "{{ sap_vm_provision_dns_root_domain_register.user_input }}"

- name: Block for sap_install_media_detect_source_directory
  when: sap_install_media_detect_source_directory is not defined or not sap_install_media_detect_source_directory
  block:
    - name: Interactive input - sap_install_media_detect_source_directory
      ansible.builtin.pause:
        prompt: |
          Please enter location of SAP installation media.
          Default: /software
      register: sap_install_media_detect_source_directory_register
      no_log: true

    - name: Set fact for sap_install_media_detect_source_directory
      ansible.builtin.set_fact:
        sap_install_media_detect_source_directory: "{{ '/software' if not sap_install_media_detect_source_directory_register.user_input
          else sap_install_media_detect_source_directory_register.user_input }}"

- name: Block for sap_id_user
  when: sap_id_user is not defined or not sap_id_user
  block:
    - name: Interactive input - sap_id_user
      ansible.builtin.pause:
        prompt: "Please enter SAP S-User ID for downloading SAP installation media using sap_launchpad."
      register: sap_id_user_register
      no_log: true

    - name: Set fact for sap_id_user
      ansible.builtin.set_fact:
        sap_id_user: "{{ sap_id_user_register.user_input }}"

- name: Block for sap_id_user_password
  when: sap_id_user_password is not defined or not sap_id_user_password
  block:
    - name: Interactive input - sap_id_user_password
      ansible.builtin.pause:
        prompt: "Please enter SAP S-User Password for downloading SAP installation media using sap_launchpad."
      register: sap_id_user_password_register
      no_log: true

    - name: Set fact for sap_id_user_password
      ansible.builtin.set_fact:
        sap_id_user_password: "{{ sap_id_user_password_register.user_input }}"


# # Interactive inputs for infrastructure
# - name: Block for sap_vm_provision_nfs_mount_point
#   when:
#     - sap_vm_provision_nfs_mount_point is defined
#       and (sap_vm_provision_nfs_mount_point == ''
#       or sap_vm_provision_nfs_mount_point == 'ENTER_STRING_VALUE_HERE')
#   block:
#     - name: Interactive input - sap_vm_provision_nfs_mount_point
#       ansible.builtin.pause:
#         prompt: "Please enter NFS mount."
#       register: sap_id_user_password_register
#       no_log: true

#     - name: Set fact for sap_id_user_password
#       ansible.builtin.set_fact:
#         sap_id_user_password: "{{ sap_id_user_password_register.user_input }}"
